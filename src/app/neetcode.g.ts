export const neetcodeProblems = {
  "Arrays & Hashing": [
    "contains-duplicate",
    "valid-anagram",
    "concatenation-of-array",
    "replace-elements-with-greatest-element-on-right-side",
    "is-subsequence",
    "length-of-last-word",
    "two-sum",
    "longest-common-prefix",
    "group-anagrams",
    "pascals-triangle",
    "remove-element",
    "unique-email-addresses",
    "isomorphic-strings",
    "can-place-flowers",
    "majority-element",
    "next-greater-element-i",
    "find-pivot-index",
    "range-sum-query-immutable",
    "find-all-numbers-disappeared-in-an-array",
    "maximum-number-of-balloons",
    "word-pattern",
    "design-hashset",
    "design-hashmap",
    "sort-an-array",
    "top-k-frequent-elements",
    "product-of-array-except-self",
    "valid-sudoku",
    "encode-and-decode-strings",
    "longest-consecutive-sequence",
    "sort-colors",
    "encode-and-decode-tinyurl",
    "brick-wall",
    "best-time-to-buy-and-sell-stock-ii",
    "subarray-sum-equals-k",
    "unique-length-3-palindromic-subsequences",
    "minimum-number-of-swaps-to-make-the-string-balanced",
    "number-of-pairs-of-interchangeable-rectangles",
    "maximum-product-of-the-length-of-two-palindromic-subsequences",
    "grid-game",
    "find-all-anagrams-in-a-string",
    "find-the-index-of-the-first-occurrence-in-a-string",
    "wiggle-sort",
    "largest-number",
    "continuous-subarray-sum",
    "push-dominoes",
    "repeated-dna-sequences",
    "insert-delete-getrandom-o1",
    "check-if-a-string-contains-all-binary-codes-of-size-k",
    "range-sum-query-2d-immutable",
    "non-decreasing-array",
    "first-missing-positive",
    "sign-of-the-product-of-an-array",
    "find-the-difference-of-two-arrays",
    "design-parking-system",
    "number-of-zero-filled-subarrays",
    "optimal-partition-of-string",
    "design-underground-system",
    "naming-a-company",
  ],
  "Two Pointers": [
    "valid-palindrome",
    "valid-palindrome-ii",
    "minimum-difference-between-highest-and-lowest-of-k-scores",
    "merge-strings-alternately",
    "reverse-string",
    "merge-sorted-array",
    "move-zeroes",
    "remove-duplicates-from-sorted-array",
    "remove-duplicates-from-sorted-array-ii",
    "two-sum-ii-input-array-is-sorted",
    "3sum",
    "4sum",
    "container-with-most-water",
    "number-of-subsequences-that-satisfy-the-given-sum-condition",
    "rotate-array",
    "array-with-elements-not-equal-to-average-of-neighbors",
    "boats-to-save-people",
    "trapping-rain-water",
  ],
  "Sliding Window": [
    "best-time-to-buy-and-sell-stock",
    "contains-duplicate-ii",
    "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
    "longest-substring-without-repeating-characters",
    "longest-repeating-character-replacement",
    "permutation-in-string",
    "frequency-of-the-most-frequent-element",
    "fruit-into-baskets",
    "maximum-number-of-vowels-in-a-substring-of-given-length",
    "minimum-number-of-flips-to-make-the-binary-string-alternating",
    "minimum-size-subarray-sum",
    "find-k-closest-elements",
    "minimum-window-substring",
    "sliding-window-maximum",
  ],
  Stack: [
    "valid-parentheses",
    "baseball-game",
    "implement-stack-using-queues",
    "min-stack",
    "evaluate-reverse-polish-notation",
    "removing-stars-from-a-string",
    "validate-stack-sequences",
    "generate-parentheses",
    "asteroid-collision",
    "daily-temperatures",
    "online-stock-span",
    "car-fleet",
    "simplify-path",
    "decode-string",
    "remove-k-digits",
    "remove-all-adjacent-duplicates-in-string-ii",
    "132-pattern",
    "maximum-frequency-stack",
    "largest-rectangle-in-histogram",
  ],
  "Binary Search": [
    "binary-search",
    "search-insert-position",
    "guess-number-higher-or-lower",
    "arranging-coins",
    "squares-of-a-sorted-array",
    "valid-perfect-square",
    "sqrtx",
    "single-element-in-a-sorted-array",
    "capacity-to-ship-packages-within-d-days",
    "find-peak-element",
    "successful-pairs-of-spells-and-potions",
    "search-a-2d-matrix",
    "koko-eating-bananas",
    "find-minimum-in-rotated-sorted-array",
    "search-in-rotated-sorted-array",
    "time-based-key-value-store",
    "find-first-and-last-position-of-element-in-sorted-array",
    "maximum-number-of-removable-characters",
    "populating-next-right-pointers-in-each-node",
    "search-suggestions-system",
    "split-array-largest-sum",
    "median-of-two-sorted-arrays",
  ],
  "Linked List": [
    "reverse-linked-list",
    "merge-two-sorted-lists",
    "palindrome-linked-list",
    "remove-linked-list-elements",
    "remove-duplicates-from-sorted-list",
    "middle-of-the-linked-list",
    "intersection-of-two-linked-lists",
    "reorder-list",
    "maximum-twin-sum-of-a-linked-list",
    "remove-nth-node-from-end-of-list",
    "swapping-nodes-in-a-linked-list",
    "lfu-cache",
    "copy-list-with-random-pointer",
    "design-linked-list",
    "design-browser-history",
    "add-two-numbers",
    "linked-list-cycle",
    "find-the-duplicate-number",
    "swap-nodes-in-pairs",
    "sort-list",
    "partition-list",
    "rotate-list",
    "reverse-linked-list-ii",
    "design-circular-queue",
    "insertion-sort-list",
    "lru-cache",
    "merge-k-sorted-lists",
    "reverse-nodes-in-k-group",
  ],
  Trees: [
    "binary-tree-inorder-traversal",
    "binary-tree-preorder-traversal",
    "binary-tree-postorder-traversal",
    "invert-binary-tree",
    "maximum-depth-of-binary-tree",
    "diameter-of-binary-tree",
    "balanced-binary-tree",
    "same-tree",
    "subtree-of-another-tree",
    "convert-sorted-array-to-binary-search-tree",
    "merge-two-binary-trees",
    "path-sum",
    "construct-string-from-binary-tree",
    "lowest-common-ancestor-of-a-binary-search-tree",
    "insert-into-a-binary-search-tree",
    "delete-node-in-a-bst",
    "binary-tree-level-order-traversal",
    "binary-tree-right-side-view",
    "minimum-distance-between-bst-nodes",
    "symmetric-tree",
    "minimum-time-to-collect-all-apples-in-a-tree",
    "binary-tree-zigzag-level-order-traversal",
    "construct-quad-tree",
    "find-duplicate-subtrees",
    "check-completeness-of-a-binary-tree",
    "construct-binary-tree-from-inorder-and-postorder-traversal",
    "maximum-width-of-binary-tree",
    "time-needed-to-inform-all-employees",
    "count-good-nodes-in-binary-tree",
    "validate-binary-search-tree",
    "kth-smallest-element-in-a-bst",
    "construct-binary-tree-from-preorder-and-inorder-traversal",
    "unique-binary-search-trees",
    "sum-root-to-leaf-numbers",
    "house-robber-iii",
    "flip-equivalent-binary-trees",
    "operations-on-tree",
    "all-possible-full-binary-trees",
    "find-bottom-left-tree-value",
    "trim-a-binary-search-tree",
    "binary-search-tree-iterator",
    "convert-bst-to-greater-tree",
    "binary-tree-maximum-path-sum",
    "serialize-and-deserialize-binary-tree",
  ],
  Tries: [
    "implement-trie-prefix-tree",
    "design-add-and-search-words-data-structure",
    "word-search-ii",
  ],
  "Heap / Priority Queue": [
    "kth-largest-element-in-a-stream",
    "last-stone-weight",
    "k-closest-points-to-origin",
    "kth-largest-element-in-an-array",
    "task-scheduler",
    "design-twitter",
    "minimize-deviation-in-array",
    "maximum-subsequence-score",
    "single-threaded-cpu",
    "seat-reservation-manager",
    "process-tasks-using-servers",
    "find-the-kth-largest-integer-in-the-array",
    "reorganize-string",
    "longest-happy-string",
    "car-pooling",
    "find-median-from-data-stream",
    "maximum-performance-of-a-team",
    "ipo",
  ],
  Backtracking: [
    "subsets",
    "combination-sum",
    "combinations",
    "permutations",
    "subsets-ii",
    "combination-sum-ii",
    "permutations-ii",
    "word-search",
    "palindrome-partitioning",
    "restore-ip-addresses",
    "letter-combinations-of-a-phone-number",
    "matchsticks-to-square",
    "splitting-a-string-into-descending-consecutive-values",
    "find-unique-binary-string",
    "maximum-length-of-a-concatenated-string-with-unique-characters",
    "partition-to-k-equal-sum-subsets",
    "n-queens",
    "n-queens-ii",
  ],
  Graphs: [
    "island-perimeter",
    "verifying-an-alien-dictionary",
    "number-of-islands",
    "clone-graph",
    "max-area-of-island",
    "count-sub-islands",
    "pacific-atlantic-water-flow",
    "surrounded-regions",
    "reorder-routes-to-make-all-paths-lead-to-the-city-zero",
    "rotting-oranges",
    "walls-and-gates",
    "snakes-and-ladders",
    "open-the-lock",
    "find-eventual-safe-states",
    "course-schedule",
    "course-schedule-ii",
    "course-schedule-iv",
    "check-if-move-is-legal",
    "shortest-bridge",
    "shortest-path-in-binary-matrix",
    "redundant-connection",
    "number-of-connected-components-in-an-undirected-graph",
    "graph-valid-tree",
    "accounts-merge",
    "find-closest-node-to-given-two-nodes",
    "shortest-path-in-binary-matrix",
    "as-far-from-land-as-possible",
    "shortest-path-with-alternating-colors",
    "minimum-fuel-cost-to-report-to-the-capital",
    "minimum-score-of-a-path-between-two-cities",
    "number-of-closed-islands",
    "number-of-enclaves",
    "minimum-number-of-vertices-to-reach-all-nodes",
    "is-graph-bipartite",
    "evaluate-division",
    "detonate-the-maximum-bombs",
    "largest-color-value-in-a-directed-graph",
    "minimum-number-of-days-to-eat-n-oranges",
    "word-ladder",
  ],
  "Advanced Graphs": [
    "reconstruct-itinerary",
    "min-cost-to-connect-all-points",
    "network-delay-time",
    "path-with-maximum-probability",
    "swim-in-rising-water",
    "alien-dictionary",
    "cheapest-flights-within-k-stops",
    "number-of-good-paths",
    "remove-max-number-of-edges-to-keep-graph-fully-traversable",
  ],
  "1-D Dynamic Programming": [
    "climbing-stairs",
    "min-cost-climbing-stairs",
    "house-robber",
    "house-robber-ii",
    "longest-palindromic-substring",
    "palindromic-substrings",
    "decode-ways",
    "coin-change",
    "maximum-product-subarray",
    "word-break",
    "longest-increasing-subsequence",
    "partition-equal-subset-sum",
    "triangle",
    "delete-and-earn",
    "paint-house",
    "combination-sum-iv",
    "perfect-squares",
    "maximum-subarray-min-product",
    "minimum-cost-for-tickets",
    "integer-break",
    "number-of-longest-increasing-subsequence",
    "stickers-to-spell-word",
    "n-th-tribonacci-number",
    "uncrossed-lines",
    "solving-questions-with-brainpower",
    "count-ways-to-build-good-strings",
    "new-21-game",
    "best-team-with-no-conflicts",
    "stone-game-iii",
    "concatenated-words",
    "maximize-score-after-n-operations",
    "find-the-longest-valid-obstacle-course-at-each-position",
  ],
  "2-D Dynamic Programming": [
    "unique-paths",
    "unique-paths-ii",
    "longest-common-subsequence",
    "longest-palindromic-subsequence",
    "last-stone-weight-ii",
    "best-time-to-buy-and-sell-stock-with-cooldown",
    "coin-change-ii",
    "target-sum",
    "interleaving-string",
    "stone-game",
    "minimum-path-sum",
    "longest-increasing-path-in-a-matrix",
    "maximal-square",
    "ones-and-zeroes",
    "maximum-alternating-subsequence-sum",
    "distinct-subsequences",
    "edit-distance",
    "count-vowels-permutation",
    "burst-balloons",
    "number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
    "regular-expression-matching",
    "stone-game-ii",
    "flip-string-to-monotone-increasing",
    "maximum-value-of-k-coins-from-piles",
    "number-of-ways-to-form-a-target-string-given-a-dictionary",
    "profitable-schemes",
    "minimum-cost-to-cut-a-stick",
  ],
  Greedy: [
    "maximum-subarray",
    "maximum-sum-circular-subarray",
    "longest-turbulent-subarray",
    "jump-game",
    "jump-game-ii",
    "jump-game-vii",
    "gas-station",
    "hand-of-straights",
    "minimize-maximum-of-array",
    "dota2-senate",
    "maximum-points-you-can-obtain-from-cards",
    "merge-triplets-to-form-target-triplet",
    "partition-labels",
    "valid-parenthesis-string",
    "eliminate-maximum-number-of-monsters",
    "two-city-scheduling",
  ],
  Intervals: [
    "insert-interval",
    "merge-intervals",
    "non-overlapping-intervals",
    "meeting-rooms",
    "meeting-rooms-ii",
    "remove-covered-intervals",
    "minimum-interval-to-include-each-query",
    "data-stream-as-disjoint-intervals",
  ],
  "Math & Geometry": [
    "greatest-common-divisor-of-strings",
    "count-odd-numbers-in-an-interval-range",
    "matrix-diagonal-sum",
    "max-points-on-a-line",
    "rotate-image",
    "spiral-matrix",
    "spiral-matrix-ii",
    "set-matrix-zeroes",
    "happy-number",
    "plus-one",
    "palindrome-number",
    "ugly-number",
    "shift-2d-grid",
    "roman-to-integer",
    "integer-to-roman",
    "powx-n",
    "multiply-strings",
    "detect-squares",
    "robot-bounded-in-circle",
    "zigzag-conversion",
    "find-missing-observations",
  ],
  "Bit Manipulation": [
    "single-number",
    "number-of-1-bits",
    "counting-bits",
    "reverse-bits",
    "missing-number",
    "shuffle-the-array",
    "add-to-array-form-of-integer",
    "sum-of-two-integers",
    "reverse-integer",
    "add-binary",
  ],
  JavaScript: [
    "create-hello-world-function",
    "counter",
    "counter-ii",
    "apply-transform-over-each-element-in-array",
    "filter-elements-from-array",
    "array-reduce-transformation",
    "function-composition",
    "allow-one-function-call",
    "memoize",
    "curry",
    "sleep",
    "promise-time-limit",
    "promise-pool",
    "cache-with-time-limit",
    "debounce",
    "throttle",
    "json-deep-equal",
    "convert-object-to-json-string",
    "array-of-objects-to-matrix",
    "differences-between-two-objects",
    "chunk-array",
    "flatten-deeply-nested-array",
    "array-prototype-last",
    "group-by",
    "check-if-object-instance-of-class",
    "call-function-with-custom-context",
    "event-emitter",
    "array-wrapper",
    "generate-fibonacci-sequence",
    "nested-array-generator",
  ],
};
